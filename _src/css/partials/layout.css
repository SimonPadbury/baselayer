.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.sticky {
  position: sticky;
}

.top {
  top: 0;
}

.right {
  right: 0;
}

.bottom {
  bottom: 0;
}

.left {
  left: 0;
}

.z1 {
  z-index: 1;
}

.z2 {
  z-index: 2;
}

.z3 {
  z-index: 3;
}

.overflowx {
  overflow-x: auto;
}

.overflowy {
  overflow-y: auto;
}

.block {
  display: block;
}

.inlineblock {
  display: inline-block;
}

.inlineflex {
  display: inline-flex;
}

.flex {
  display: flex;
}

.flexwrap {
  flex-wrap: wrap;
}

.flexcolumn {
  flex-direction: column;
}

.flexstart {
  justify-content: flex-start;
}

.flexcenter {
  justify-content: center;
}

.flexend {
  justify-content: flex-end;
}

.flextop {
  align-items: flex-start;
}

.flexmiddle {
  align-items: center;
}

.flexbottom {
  align-items: flex-end;
}

.flexspace {
  justify-content: space-between;
}

.grow {
  flex-grow: 1;
}

/*
Gaps - these work for both flexbox (including inside buttons) and the grid system
(Donâ€™t use these on containergrid)
*/

.gap1 {
	--gap: var(--s1);
	gap: var(--gap);
}

.gap2 {
	--gap: var(--s2);
	gap: var(--gap);
}

.gap3 {
	--gap: var(--s3);
	gap: var(--gap);
}

.gap4 {
	--gap: var(--s4);
	gap: var(--gap);
}

/* 
Grid system
*/

.grid2cols {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid3cols {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid4cols {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.col1 {
  grid-column: 1;
}

.col2 {
  grid-column: 2;
}

.col3 {
  grid-column: 3;
}

.col4 {
  grid-column: 4;
}

.cols1-2 {
  grid-column: 1 / span 2;
}

.cols1-3 {
  grid-column: 1 / span 3;
}

.cols1-4 {
  grid-column: 1 / span 4;
}

.cols2-3 {
  grid-column: 2 / span 2;
}

.cols2-4 {
  grid-column: 2 / span 3;
}

.cols3-4 {
  grid-column: 3 / span 2;
}

.dense { grid-auto-flow: dense; }

/*
Invisibility and flex column drops (XS, SM, MD, LG)
*/

/* Immediate parent selector for `.cq*` droppers */
:has(> [class*=cq]) {
  container-type: inline-size;
}

@container (max-width: 511px) {
  .cqxs\:drop {
    display: flex;
    flex-direction: column;
  }
}

@media (max-width: 511px) {
  .xs\:drop {
    display: flex;
    flex-direction: column;
  }
  .xs\:hiddenbelow {
    display: none !important;
  }
}
@media (min-width: 512px) {
  .xs\:hidden {
    display: none !important;
  }
}

@container (max-width: 767px) {
  .cqsm\:drop {
    display: flex;
    flex-direction: column;
  }
}

@media (max-width: 767px) {
  .sm\:drop {
    display: flex;
    flex-direction: column;
  }
  .sm\:hiddenbelow {
    display: none !important;
  }
}
@media (min-width: 768px) {
  .sm\:hidden {
    display: none !important;
  }
}

@container (max-width: 1023px) {
  .cqmd\:drop {
    display: flex;
    flex-direction: column;
  }
}

@media (max-width: 1023px) {
  .md\:drop {
    display: flex;
    flex-direction: column;
  }
  .md\:hiddenbelow {
    display: none !important;
  }
}
@media (min-width: 1024px) {
  .md\:hidden {
    display: none !important;
  }
}

@container (max-width: 1279px) {
  .cqlg\:drop {
    display: flex;
    flex-direction: column;
  }
}

@media (max-width: 1279px) {
  .lg\:drop {
    display: flex;
    flex-direction: column;
  }
  .lg\:hiddenbelow {
    display: none !important;
  }
}
@media (min-width: 1280px) {
  .lg\:hidden {
    display: none !important;
  }
}

/*
Content grid
*/

.contentgrid {
  --full: minmax(var(--s2), 1fr);
  --content: min(var(--wsm), 100% - (var(--s2) * 2));
  --pop: minmax(0, var(--s2));
  --expand: minmax(0, calc(180px - var(--s2)));

  display: grid;
  grid-template-columns:
    var(--full) var(--expand) var(--pop) var(--content) var(--pop) var(--expand) var(--full);
}

.contentgrid>* {
  grid-column: 4;
}

.popout {
  grid-column: 3 / span 3;
}

.expand {
  grid-column: 2 / span 5;
}

.fullbleed {
  grid-column: 1 / span 7;
}

.contentgrid>hr+* {
  margin-top: 0;
}

/*
Container
*/

.container {
  --wmax: var(--wxxl);
  width: min(100% - (var(--s2) * 2), var(--wmax));
  margin-inline: auto;
}

.w100\% {
  width: 100%;
}

.wxxs {
	--wmax: var(--wxxs);
	max-width: var(--wmax);
}

.wxs {
	--wmax: var(--wxs);
	max-width: var(--wmax);
}

.wsm {
	--wmax: var(--wsm);
	max-width: var(--wmax);
}

.wmd {
	--wmax: var(--wmd);
	max-width: var(--wmax);
}

.wlg {
	--wmax: var(--wlg);
	max-width: var(--wmax);
}

.wxl {
	--wmax: var(--wxl);
	max-width: var(--wmax);
}

.wxxl {
	--wmax: var(--wxxl);
	max-width: var(--wmax);
}

.wmax100vw {
  max-width: 100vw;
}

.h100\% {
  height: 100%;
}

.h100dvh {
  height: min(100%, 100dvh);
}
.hmax100dvh {
  max-height: 100dvh;
}


.box {
  inset: 0;
}

.ratio1x1 {
  aspect-ratio: 1 / 1;
}

.ratio4x3 {
  aspect-ratio: 4 / 3;
}

.ratio16x9 {
  aspect-ratio: 16 / 9;
}

.ratio21x9 {
  aspect-ratio: 21 / 9;
}